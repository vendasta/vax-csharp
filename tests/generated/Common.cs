// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sales_orders/v1/common.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Salesorders.V1 {

  /// <summary>Holder for reflection information generated from sales_orders/v1/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for sales_orders/v1/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxzYWxlc19vcmRlcnMvdjEvY29tbW9uLnByb3RvEg5zYWxlc29yZGVycy52",
            "MSJQChBSZXZlbnVlQ29tcG9uZW50Eg0KBXZhbHVlGAEgASgDEi0KBnBlcmlv",
            "ZBgCIAEoDjIdLnNhbGVzb3JkZXJzLnYxLlJldmVudWVQZXJpb2QiRwoHUmV2",
            "ZW51ZRI8ChJyZXZlbnVlX2NvbXBvbmVudHMYASADKAsyIC5zYWxlc29yZGVy",
            "cy52MS5SZXZlbnVlQ29tcG9uZW50KkAKCEN1cnJlbmN5EgcKA1VTRBAAEgcK",
            "A0NBRBABEgcKA0VVUhACEgcKA0FVRBADEgcKA0dCUBAEEgcKA05aRBAFKloK",
            "DVJldmVudWVQZXJpb2QSCwoHT05FVElNRRAAEgkKBURBSUxZEAESCgoGV0VF",
            "S0xZEAISDAoIQklXRUVLTFkQAxILCgdNT05USExZEAQSCgoGWUVBUkxZEAVC",
            "NAolY29tLnZlbmRhc3RhLnNhbGVzb3JkZXJzLnYxLmdlbmVyYXRlZEILQ29t",
            "bW9uUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Salesorders.V1.Currency), typeof(global::Salesorders.V1.RevenuePeriod), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.RevenueComponent), global::Salesorders.V1.RevenueComponent.Parser, new[]{ "Value", "Period" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.Revenue), global::Salesorders.V1.Revenue.Parser, new[]{ "RevenueComponents" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The different world currencies that a package could pertain to
  /// </summary>
  public enum Currency {
    [pbr::OriginalName("USD")] Usd = 0,
    [pbr::OriginalName("CAD")] Cad = 1,
    [pbr::OriginalName("EUR")] Eur = 2,
    [pbr::OriginalName("AUD")] Aud = 3,
    [pbr::OriginalName("GBP")] Gbp = 4,
    [pbr::OriginalName("NZD")] Nzd = 5,
  }

  /// <summary>
  /// The different periods at which a client can be charged
  /// </summary>
  public enum RevenuePeriod {
    [pbr::OriginalName("ONETIME")] Onetime = 0,
    [pbr::OriginalName("DAILY")] Daily = 1,
    [pbr::OriginalName("WEEKLY")] Weekly = 2,
    [pbr::OriginalName("BIWEEKLY")] Biweekly = 3,
    [pbr::OriginalName("MONTHLY")] Monthly = 4,
    [pbr::OriginalName("YEARLY")] Yearly = 5,
  }

  #endregion

  #region Messages
  public sealed partial class RevenueComponent : pb::IMessage<RevenueComponent> {
    private static readonly pb::MessageParser<RevenueComponent> _parser = new pb::MessageParser<RevenueComponent>(() => new RevenueComponent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RevenueComponent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevenueComponent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevenueComponent(RevenueComponent other) : this() {
      value_ = other.value_;
      period_ = other.period_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevenueComponent Clone() {
      return new RevenueComponent(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private long value_;
    /// <summary>
    /// The value in the smallest common currency unit i.e. cents. Therefore 4000 would represent $40.00
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 2;
    private global::Salesorders.V1.RevenuePeriod period_ = 0;
    /// <summary>
    /// The frequency this revenue occurs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.RevenuePeriod Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RevenueComponent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RevenueComponent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (Period != other.Period) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (Period != 0) hash ^= Period.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Value);
      }
      if (Period != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Period);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (Period != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Period);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RevenueComponent other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      if (other.Period != 0) {
        Period = other.Period;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Value = input.ReadInt64();
            break;
          }
          case 16: {
            period_ = (global::Salesorders.V1.RevenuePeriod) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Revenue : pb::IMessage<Revenue> {
    private static readonly pb::MessageParser<Revenue> _parser = new pb::MessageParser<Revenue>(() => new Revenue());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Revenue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Revenue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Revenue(Revenue other) : this() {
      revenueComponents_ = other.revenueComponents_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Revenue Clone() {
      return new Revenue(this);
    }

    /// <summary>Field number for the "revenue_components" field.</summary>
    public const int RevenueComponentsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Salesorders.V1.RevenueComponent> _repeated_revenueComponents_codec
        = pb::FieldCodec.ForMessage(10, global::Salesorders.V1.RevenueComponent.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.RevenueComponent> revenueComponents_ = new pbc::RepeatedField<global::Salesorders.V1.RevenueComponent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.RevenueComponent> RevenueComponents {
      get { return revenueComponents_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Revenue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Revenue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!revenueComponents_.Equals(other.revenueComponents_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= revenueComponents_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      revenueComponents_.WriteTo(output, _repeated_revenueComponents_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += revenueComponents_.CalculateSize(_repeated_revenueComponents_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Revenue other) {
      if (other == null) {
        return;
      }
      revenueComponents_.Add(other.revenueComponents_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            revenueComponents_.AddEntriesFrom(input, _repeated_revenueComponents_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
