// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sales_orders/v1/sales_orders.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Salesorders.V1 {

  /// <summary>Holder for reflection information generated from sales_orders/v1/sales_orders.proto</summary>
  public static partial class SalesOrdersReflection {

    #region Descriptor
    /// <summary>File descriptor for sales_orders/v1/sales_orders.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SalesOrdersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJzYWxlc19vcmRlcnMvdjEvc2FsZXNfb3JkZXJzLnByb3RvEg5zYWxlc29y",
            "ZGVycy52MRofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxocc2Fs",
            "ZXNfb3JkZXJzL3YxL2NvbW1vbi5wcm90byIsCghBZGRvbktleRIQCghhZGRv",
            "bl9pZBgBIAEoCRIOCgZhcHBfaWQYAiABKAkiyAEKB1BhY2thZ2USEgoKcGFj",
            "a2FnZV9pZBgBIAEoCRIqCghjdXJyZW5jeRgCIAEoDjIYLnNhbGVzb3JkZXJz",
            "LnYxLkN1cnJlbmN5EigKB3JldmVudWUYAyABKAsyFy5zYWxlc29yZGVycy52",
            "MS5SZXZlbnVlEhAKCHF1YW50aXR5GAQgASgDEhMKC3Byb2R1Y3RfaWRzGAUg",
            "AygJEiwKCmFkZG9uX2tleXMYBiADKAsyGC5zYWxlc29yZGVycy52MS5BZGRv",
            "bktleSKcAQoFRmllbGQSEAoIZmllbGRfaWQYASABKAkSDgoGYW5zd2VyGAIg",
            "ASgJEi0KCmZpZWxkX3R5cGUYAyABKA4yGS5zYWxlc29yZGVycy52MS5GaWVs",
            "ZFR5cGUSDQoFbGFiZWwYBCABKAkSEwoLZGVzY3JpcHRpb24YBSABKAkSDgoG",
            "cHJlZml4GAYgASgJEg4KBnN1ZmZpeBgHIAEoCSJ1CgtDdXN0b21GaWVsZBIl",
            "CgZmaWVsZHMYASADKAsyFS5zYWxlc29yZGVycy52MS5GaWVsZBISCgpwcm9k",
            "dWN0X2lkGAIgASgJEisKCWFkZG9uX2tleRgDIAEoCzIYLnNhbGVzb3JkZXJz",
            "LnYxLkFkZG9uS2V5InYKC0NvbW1vbkZpZWxkEiQKBWZpZWxkGAEgASgLMhUu",
            "c2FsZXNvcmRlcnMudjEuRmllbGQSEwoLcHJvZHVjdF9pZHMYAiADKAkSLAoK",
            "YWRkb25fa2V5cxgDIAMoCzIYLnNhbGVzb3JkZXJzLnYxLkFkZG9uS2V5ImQK",
            "EVByb2R1Y3RBY3RpdmF0aW9uEhIKCnByb2R1Y3RfaWQYASABKAkSOwoRYWN0",
            "aXZhdGlvbl9zdGF0dXMYAiABKA4yIC5zYWxlc29yZGVycy52MS5BY3RpdmF0",
            "aW9uU3RhdHVzInAKD0FkZG9uQWN0aXZhdGlvbhIQCghhZGRvbl9pZBgBIAEo",
            "CRIOCgZhcHBfaWQYAiABKAkSOwoRYWN0aXZhdGlvbl9zdGF0dXMYAyABKA4y",
            "IC5zYWxlc29yZGVycy52MS5BY3RpdmF0aW9uU3RhdHVzInkKEVN0YXR1c0hp",
            "c3RvcnlJdGVtEg8KB3VzZXJfaWQYASABKAkSJgoGc3RhdHVzGAIgASgOMhYu",
            "c2FsZXNvcmRlcnMudjEuU3RhdHVzEisKB2NyZWF0ZWQYAyABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wIpkFCgVPcmRlchIQCghvcmRlcl9pZBgB",
            "IAEoCRIWCg5zYWxlc3BlcnNvbl9pZBgCIAEoCRISCgpwYXJ0bmVyX2lkGAMg",
            "ASgJEhMKC2J1c2luZXNzX2lkGAQgASgJEhEKCW1hcmtldF9pZBgFIAEoCRIX",
            "Cg9vcHBvcnR1bml0eV9pZHMYBiADKAkSJgoGc3RhdHVzGAcgASgOMhYuc2Fs",
            "ZXNvcmRlcnMudjEuU3RhdHVzEjgKFHJlcXVlc3RlZF9hY3RpdmF0aW9uGAgg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBINCgVub3RlcxgJIAEo",
            "CRIpCghwYWNrYWdlcxgKIAMoCzIXLnNhbGVzb3JkZXJzLnYxLlBhY2thZ2US",
            "MgoNY3VzdG9tX2ZpZWxkcxgLIAMoCzIbLnNhbGVzb3JkZXJzLnYxLkN1c3Rv",
            "bUZpZWxkEjIKDWNvbW1vbl9maWVsZHMYDCADKAsyGy5zYWxlc29yZGVycy52",
            "MS5Db21tb25GaWVsZBIrCgdjcmVhdGVkGA0gASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBI+ChNwcm9kdWN0X2FjdGl2YXRpb25zGA4gAygLMiEu",
            "c2FsZXNvcmRlcnMudjEuUHJvZHVjdEFjdGl2YXRpb24SOgoRYWRkb25fYWN0",
            "aXZhdGlvbnMYEiADKAsyHy5zYWxlc29yZGVycy52MS5BZGRvbkFjdGl2YXRp",
            "b24SOQoOc3RhdHVzX2hpc3RvcnkYEyADKAsyIS5zYWxlc29yZGVycy52MS5T",
            "dGF0dXNIaXN0b3J5SXRlbRIXCg9kZWNsaW5lZF9yZWFzb24YFCABKAlKBAgP",
            "EBBKBAgQEBFKBAgREBIqdgoGU3RhdHVzEg0KCVNVQk1JVFRFRBAAEgwKCEFQ",
            "UFJPVkVEEAESDAoIREVDTElORUQQAhILCgdEUkFGVEVEEAMSDQoJRlVMRklM",
            "TEVEEAQSDgoKUFJPQ0VTU0lORxAFEhUKEUFDVElWQVRJT05fRVJST1JTEAYq",
            "UgoQQWN0aXZhdGlvblN0YXR1cxILCgdQRU5ESU5HEAASDQoJQUNUSVZBVEVE",
            "EAESCwoHRVJST1JFRBACEhUKEUFMUkVBRFlfQUNUSVZBVEVEEAMqaQoJRmll",
            "bGRUeXBlEhEKDU5PVF9TUEVDSUZJRUQQABIICgRURVhUEAESDAoIVEVYVEFS",
            "RUEQAhIMCghEUk9QRE9XThADEgwKCENIRUNLQk9YEAQSCAoERklMRRAFEgsK",
            "B1ZCQ1VTRVIQBkI5CiVjb20udmVuZGFzdGEuc2FsZXNvcmRlcnMudjEuZ2Vu",
            "ZXJhdGVkQhBTYWxlc09yZGVyc1Byb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Salesorders.V1.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Salesorders.V1.Status), typeof(global::Salesorders.V1.ActivationStatus), typeof(global::Salesorders.V1.FieldType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.AddonKey), global::Salesorders.V1.AddonKey.Parser, new[]{ "AddonId", "AppId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.Package), global::Salesorders.V1.Package.Parser, new[]{ "PackageId", "Currency", "Revenue", "Quantity", "ProductIds", "AddonKeys" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.Field), global::Salesorders.V1.Field.Parser, new[]{ "FieldId", "Answer", "FieldType", "Label", "Description", "Prefix", "Suffix" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.CustomField), global::Salesorders.V1.CustomField.Parser, new[]{ "Fields", "ProductId", "AddonKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.CommonField), global::Salesorders.V1.CommonField.Parser, new[]{ "Field", "ProductIds", "AddonKeys" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.ProductActivation), global::Salesorders.V1.ProductActivation.Parser, new[]{ "ProductId", "ActivationStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.AddonActivation), global::Salesorders.V1.AddonActivation.Parser, new[]{ "AddonId", "AppId", "ActivationStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.StatusHistoryItem), global::Salesorders.V1.StatusHistoryItem.Parser, new[]{ "UserId", "Status", "Created" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.Order), global::Salesorders.V1.Order.Parser, new[]{ "OrderId", "SalespersonId", "PartnerId", "BusinessId", "MarketId", "OpportunityIds", "Status", "RequestedActivation", "Notes", "Packages", "CustomFields", "CommonFields", "Created", "ProductActivations", "AddonActivations", "StatusHistory", "DeclinedReason" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The different statuses representing any given state an order can be in
  /// </summary>
  public enum Status {
    [pbr::OriginalName("SUBMITTED")] Submitted = 0,
    [pbr::OriginalName("APPROVED")] Approved = 1,
    [pbr::OriginalName("DECLINED")] Declined = 2,
    [pbr::OriginalName("DRAFTED")] Drafted = 3,
    [pbr::OriginalName("FULFILLED")] Fulfilled = 4,
    [pbr::OriginalName("PROCESSING")] Processing = 5,
    [pbr::OriginalName("ACTIVATION_ERRORS")] ActivationErrors = 6,
  }

  /// <summary>
  /// The different statuses representing any given state that a product can be in during the activation process
  /// </summary>
  public enum ActivationStatus {
    /// <summary>
    /// The product is in the process of being activated
    /// </summary>
    [pbr::OriginalName("PENDING")] Pending = 0,
    /// <summary>
    /// The product was successfully activated via the order
    /// </summary>
    [pbr::OriginalName("ACTIVATED")] Activated = 1,
    /// <summary>
    /// An error occured while activating the product during the activation step
    /// </summary>
    [pbr::OriginalName("ERRORED")] Errored = 2,
    /// <summary>
    /// The product was already active prior to fulfilling the order
    /// </summary>
    [pbr::OriginalName("ALREADY_ACTIVATED")] AlreadyActivated = 3,
  }

  /// <summary>
  /// Available types that a field can be
  /// </summary>
  public enum FieldType {
    [pbr::OriginalName("NOT_SPECIFIED")] NotSpecified = 0,
    [pbr::OriginalName("TEXT")] Text = 1,
    [pbr::OriginalName("TEXTAREA")] Textarea = 2,
    [pbr::OriginalName("DROPDOWN")] Dropdown = 3,
    [pbr::OriginalName("CHECKBOX")] Checkbox = 4,
    [pbr::OriginalName("FILE")] File = 5,
    [pbr::OriginalName("VBCUSER")] Vbcuser = 6,
  }

  #endregion

  #region Messages
  public sealed partial class AddonKey : pb::IMessage<AddonKey> {
    private static readonly pb::MessageParser<AddonKey> _parser = new pb::MessageParser<AddonKey>(() => new AddonKey());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddonKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.SalesOrdersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddonKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddonKey(AddonKey other) : this() {
      addonId_ = other.addonId_;
      appId_ = other.appId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddonKey Clone() {
      return new AddonKey(this);
    }

    /// <summary>Field number for the "addon_id" field.</summary>
    public const int AddonIdFieldNumber = 1;
    private string addonId_ = "";
    /// <summary>
    /// Unique identifier of an addon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddonId {
      get { return addonId_; }
      set {
        addonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 2;
    private string appId_ = "";
    /// <summary>
    /// The parent app for the addon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddonKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddonKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AddonId != other.AddonId) return false;
      if (AppId != other.AppId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AddonId.Length != 0) hash ^= AddonId.GetHashCode();
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AddonId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AddonId);
      }
      if (AppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AddonId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddonId);
      }
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddonKey other) {
      if (other == null) {
        return;
      }
      if (other.AddonId.Length != 0) {
        AddonId = other.AddonId;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AddonId = input.ReadString();
            break;
          }
          case 18: {
            AppId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Representing a package in an order
  /// </summary>
  public sealed partial class Package : pb::IMessage<Package> {
    private static readonly pb::MessageParser<Package> _parser = new pb::MessageParser<Package>(() => new Package());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Package> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.SalesOrdersReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Package() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Package(Package other) : this() {
      packageId_ = other.packageId_;
      currency_ = other.currency_;
      Revenue = other.revenue_ != null ? other.Revenue.Clone() : null;
      quantity_ = other.quantity_;
      productIds_ = other.productIds_.Clone();
      addonKeys_ = other.addonKeys_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Package Clone() {
      return new Package(this);
    }

    /// <summary>Field number for the "package_id" field.</summary>
    public const int PackageIdFieldNumber = 1;
    private string packageId_ = "";
    /// <summary>
    /// Unique identifier of a package
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageId {
      get { return packageId_; }
      set {
        packageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 2;
    private global::Salesorders.V1.Currency currency_ = 0;
    /// <summary>
    /// Type of currency the revenue of a package is in
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.Currency Currency {
      get { return currency_; }
      set {
        currency_ = value;
      }
    }

    /// <summary>Field number for the "revenue" field.</summary>
    public const int RevenueFieldNumber = 3;
    private global::Salesorders.V1.Revenue revenue_;
    /// <summary>
    /// Revenue of a package
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.Revenue Revenue {
      get { return revenue_; }
      set {
        revenue_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 4;
    private long quantity_;
    /// <summary>
    /// How many of the package is being requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "product_ids" field.</summary>
    public const int ProductIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_productIds_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> productIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of unique identifiers for the products that belong to the package
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ProductIds {
      get { return productIds_; }
    }

    /// <summary>Field number for the "addon_keys" field.</summary>
    public const int AddonKeysFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Salesorders.V1.AddonKey> _repeated_addonKeys_codec
        = pb::FieldCodec.ForMessage(50, global::Salesorders.V1.AddonKey.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.AddonKey> addonKeys_ = new pbc::RepeatedField<global::Salesorders.V1.AddonKey>();
    /// <summary>
    /// List of addon keys that belong to the package
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.AddonKey> AddonKeys {
      get { return addonKeys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Package);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Package other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageId != other.PackageId) return false;
      if (Currency != other.Currency) return false;
      if (!object.Equals(Revenue, other.Revenue)) return false;
      if (Quantity != other.Quantity) return false;
      if(!productIds_.Equals(other.productIds_)) return false;
      if(!addonKeys_.Equals(other.addonKeys_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageId.Length != 0) hash ^= PackageId.GetHashCode();
      if (Currency != 0) hash ^= Currency.GetHashCode();
      if (revenue_ != null) hash ^= Revenue.GetHashCode();
      if (Quantity != 0L) hash ^= Quantity.GetHashCode();
      hash ^= productIds_.GetHashCode();
      hash ^= addonKeys_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PackageId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PackageId);
      }
      if (Currency != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Currency);
      }
      if (revenue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Revenue);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Quantity);
      }
      productIds_.WriteTo(output, _repeated_productIds_codec);
      addonKeys_.WriteTo(output, _repeated_addonKeys_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageId);
      }
      if (Currency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Currency);
      }
      if (revenue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Revenue);
      }
      if (Quantity != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quantity);
      }
      size += productIds_.CalculateSize(_repeated_productIds_codec);
      size += addonKeys_.CalculateSize(_repeated_addonKeys_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Package other) {
      if (other == null) {
        return;
      }
      if (other.PackageId.Length != 0) {
        PackageId = other.PackageId;
      }
      if (other.Currency != 0) {
        Currency = other.Currency;
      }
      if (other.revenue_ != null) {
        if (revenue_ == null) {
          revenue_ = new global::Salesorders.V1.Revenue();
        }
        Revenue.MergeFrom(other.Revenue);
      }
      if (other.Quantity != 0L) {
        Quantity = other.Quantity;
      }
      productIds_.Add(other.productIds_);
      addonKeys_.Add(other.addonKeys_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PackageId = input.ReadString();
            break;
          }
          case 16: {
            currency_ = (global::Salesorders.V1.Currency) input.ReadEnum();
            break;
          }
          case 26: {
            if (revenue_ == null) {
              revenue_ = new global::Salesorders.V1.Revenue();
            }
            input.ReadMessage(revenue_);
            break;
          }
          case 32: {
            Quantity = input.ReadInt64();
            break;
          }
          case 42: {
            productIds_.AddEntriesFrom(input, _repeated_productIds_codec);
            break;
          }
          case 50: {
            addonKeys_.AddEntriesFrom(input, _repeated_addonKeys_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents an information field pertaining to a product
  /// </summary>
  public sealed partial class Field : pb::IMessage<Field> {
    private static readonly pb::MessageParser<Field> _parser = new pb::MessageParser<Field>(() => new Field());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Field> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.SalesOrdersReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Field() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Field(Field other) : this() {
      fieldId_ = other.fieldId_;
      answer_ = other.answer_;
      fieldType_ = other.fieldType_;
      label_ = other.label_;
      description_ = other.description_;
      prefix_ = other.prefix_;
      suffix_ = other.suffix_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Field Clone() {
      return new Field(this);
    }

    /// <summary>Field number for the "field_id" field.</summary>
    public const int FieldIdFieldNumber = 1;
    private string fieldId_ = "";
    /// <summary>
    /// Unique identifier of a custom or common field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldId {
      get { return fieldId_; }
      set {
        fieldId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "answer" field.</summary>
    public const int AnswerFieldNumber = 2;
    private string answer_ = "";
    /// <summary>
    /// Response related to the question of the field_id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Answer {
      get { return answer_; }
      set {
        answer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "field_type" field.</summary>
    public const int FieldTypeFieldNumber = 3;
    private global::Salesorders.V1.FieldType fieldType_ = 0;
    /// <summary>
    /// The type of field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.FieldType FieldType {
      get { return fieldType_; }
      set {
        fieldType_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 4;
    private string label_ = "";
    /// <summary>
    /// The question for the custom or common field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// The description of the field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prefix" field.</summary>
    public const int PrefixFieldNumber = 6;
    private string prefix_ = "";
    /// <summary>
    /// For textbox fields, this string will be displayed in front of the textbox
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Prefix {
      get { return prefix_; }
      set {
        prefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "suffix" field.</summary>
    public const int SuffixFieldNumber = 7;
    private string suffix_ = "";
    /// <summary>
    /// For textbox fields, this string will be displayed behind the textbox
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Suffix {
      get { return suffix_; }
      set {
        suffix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Field);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Field other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldId != other.FieldId) return false;
      if (Answer != other.Answer) return false;
      if (FieldType != other.FieldType) return false;
      if (Label != other.Label) return false;
      if (Description != other.Description) return false;
      if (Prefix != other.Prefix) return false;
      if (Suffix != other.Suffix) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldId.Length != 0) hash ^= FieldId.GetHashCode();
      if (Answer.Length != 0) hash ^= Answer.GetHashCode();
      if (FieldType != 0) hash ^= FieldType.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Prefix.Length != 0) hash ^= Prefix.GetHashCode();
      if (Suffix.Length != 0) hash ^= Suffix.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FieldId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldId);
      }
      if (Answer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Answer);
      }
      if (FieldType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) FieldType);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Label);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (Prefix.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Prefix);
      }
      if (Suffix.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Suffix);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldId);
      }
      if (Answer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Answer);
      }
      if (FieldType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FieldType);
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Prefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefix);
      }
      if (Suffix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Suffix);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Field other) {
      if (other == null) {
        return;
      }
      if (other.FieldId.Length != 0) {
        FieldId = other.FieldId;
      }
      if (other.Answer.Length != 0) {
        Answer = other.Answer;
      }
      if (other.FieldType != 0) {
        FieldType = other.FieldType;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Prefix.Length != 0) {
        Prefix = other.Prefix;
      }
      if (other.Suffix.Length != 0) {
        Suffix = other.Suffix;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            FieldId = input.ReadString();
            break;
          }
          case 18: {
            Answer = input.ReadString();
            break;
          }
          case 24: {
            fieldType_ = (global::Salesorders.V1.FieldType) input.ReadEnum();
            break;
          }
          case 34: {
            Label = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            Prefix = input.ReadString();
            break;
          }
          case 58: {
            Suffix = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents the answer(s) to a custom field that is unique to a product
  /// </summary>
  public sealed partial class CustomField : pb::IMessage<CustomField> {
    private static readonly pb::MessageParser<CustomField> _parser = new pb::MessageParser<CustomField>(() => new CustomField());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.SalesOrdersReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomField(CustomField other) : this() {
      fields_ = other.fields_.Clone();
      productId_ = other.productId_;
      AddonKey = other.addonKey_ != null ? other.AddonKey.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomField Clone() {
      return new CustomField(this);
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Salesorders.V1.Field> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(10, global::Salesorders.V1.Field.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.Field> fields_ = new pbc::RepeatedField<global::Salesorders.V1.Field>();
    /// <summary>
    /// List of custom fields for a given product
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.Field> Fields {
      get { return fields_; }
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 2;
    private string productId_ = "";
    /// <summary>
    /// Unique identifier of a single product that the custom questions belong to, and will not be provided if the custom field belongs to an addon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addon_key" field.</summary>
    public const int AddonKeyFieldNumber = 3;
    private global::Salesorders.V1.AddonKey addonKey_;
    /// <summary>
    /// Addon key of an addon that the custom questions belong to, and will not be provided if the custom field belongs to a product
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.AddonKey AddonKey {
      get { return addonKey_; }
      set {
        addonKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fields_.Equals(other.fields_)) return false;
      if (ProductId != other.ProductId) return false;
      if (!object.Equals(AddonKey, other.AddonKey)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fields_.GetHashCode();
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (addonKey_ != null) hash ^= AddonKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fields_.WriteTo(output, _repeated_fields_codec);
      if (ProductId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProductId);
      }
      if (addonKey_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AddonKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (addonKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddonKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomField other) {
      if (other == null) {
        return;
      }
      fields_.Add(other.fields_);
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      if (other.addonKey_ != null) {
        if (addonKey_ == null) {
          addonKey_ = new global::Salesorders.V1.AddonKey();
        }
        AddonKey.MergeFrom(other.AddonKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
          case 18: {
            ProductId = input.ReadString();
            break;
          }
          case 26: {
            if (addonKey_ == null) {
              addonKey_ = new global::Salesorders.V1.AddonKey();
            }
            input.ReadMessage(addonKey_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents the answer to a common field may be shared between products
  /// </summary>
  public sealed partial class CommonField : pb::IMessage<CommonField> {
    private static readonly pb::MessageParser<CommonField> _parser = new pb::MessageParser<CommonField>(() => new CommonField());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.SalesOrdersReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonField(CommonField other) : this() {
      Field = other.field_ != null ? other.Field.Clone() : null;
      productIds_ = other.productIds_.Clone();
      addonKeys_ = other.addonKeys_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonField Clone() {
      return new CommonField(this);
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 1;
    private global::Salesorders.V1.Field field_;
    /// <summary>
    /// The field that may be shared by multiple products
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.Field Field {
      get { return field_; }
      set {
        field_ = value;
      }
    }

    /// <summary>Field number for the "product_ids" field.</summary>
    public const int ProductIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_productIds_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> productIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of unique product identifiers that share the common field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ProductIds {
      get { return productIds_; }
    }

    /// <summary>Field number for the "addon_keys" field.</summary>
    public const int AddonKeysFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Salesorders.V1.AddonKey> _repeated_addonKeys_codec
        = pb::FieldCodec.ForMessage(26, global::Salesorders.V1.AddonKey.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.AddonKey> addonKeys_ = new pbc::RepeatedField<global::Salesorders.V1.AddonKey>();
    /// <summary>
    /// List of addon keys that share the common field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.AddonKey> AddonKeys {
      get { return addonKeys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Field, other.Field)) return false;
      if(!productIds_.Equals(other.productIds_)) return false;
      if(!addonKeys_.Equals(other.addonKeys_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (field_ != null) hash ^= Field.GetHashCode();
      hash ^= productIds_.GetHashCode();
      hash ^= addonKeys_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (field_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Field);
      }
      productIds_.WriteTo(output, _repeated_productIds_codec);
      addonKeys_.WriteTo(output, _repeated_addonKeys_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (field_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
      }
      size += productIds_.CalculateSize(_repeated_productIds_codec);
      size += addonKeys_.CalculateSize(_repeated_addonKeys_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonField other) {
      if (other == null) {
        return;
      }
      if (other.field_ != null) {
        if (field_ == null) {
          field_ = new global::Salesorders.V1.Field();
        }
        Field.MergeFrom(other.Field);
      }
      productIds_.Add(other.productIds_);
      addonKeys_.Add(other.addonKeys_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (field_ == null) {
              field_ = new global::Salesorders.V1.Field();
            }
            input.ReadMessage(field_);
            break;
          }
          case 18: {
            productIds_.AddEntriesFrom(input, _repeated_productIds_codec);
            break;
          }
          case 26: {
            addonKeys_.AddEntriesFrom(input, _repeated_addonKeys_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents a single product with its corresponding activation status
  /// </summary>
  public sealed partial class ProductActivation : pb::IMessage<ProductActivation> {
    private static readonly pb::MessageParser<ProductActivation> _parser = new pb::MessageParser<ProductActivation>(() => new ProductActivation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductActivation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.SalesOrdersReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductActivation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductActivation(ProductActivation other) : this() {
      productId_ = other.productId_;
      activationStatus_ = other.activationStatus_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductActivation Clone() {
      return new ProductActivation(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private string productId_ = "";
    /// <summary>
    /// Unique identifier of a single product that is going through the activation process
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activation_status" field.</summary>
    public const int ActivationStatusFieldNumber = 2;
    private global::Salesorders.V1.ActivationStatus activationStatus_ = 0;
    /// <summary>
    /// The activation status of a single product
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.ActivationStatus ActivationStatus {
      get { return activationStatus_; }
      set {
        activationStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductActivation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductActivation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (ActivationStatus != other.ActivationStatus) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (ActivationStatus != 0) hash ^= ActivationStatus.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProductId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProductId);
      }
      if (ActivationStatus != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ActivationStatus);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (ActivationStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActivationStatus);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductActivation other) {
      if (other == null) {
        return;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      if (other.ActivationStatus != 0) {
        ActivationStatus = other.ActivationStatus;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProductId = input.ReadString();
            break;
          }
          case 16: {
            activationStatus_ = (global::Salesorders.V1.ActivationStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents a single addon with its corresponding activation status
  /// </summary>
  public sealed partial class AddonActivation : pb::IMessage<AddonActivation> {
    private static readonly pb::MessageParser<AddonActivation> _parser = new pb::MessageParser<AddonActivation>(() => new AddonActivation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddonActivation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.SalesOrdersReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddonActivation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddonActivation(AddonActivation other) : this() {
      addonId_ = other.addonId_;
      appId_ = other.appId_;
      activationStatus_ = other.activationStatus_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddonActivation Clone() {
      return new AddonActivation(this);
    }

    /// <summary>Field number for the "addon_id" field.</summary>
    public const int AddonIdFieldNumber = 1;
    private string addonId_ = "";
    /// <summary>
    /// Unique identifier of a single addon that is going through the activation process
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddonId {
      get { return addonId_; }
      set {
        addonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 2;
    private string appId_ = "";
    /// <summary>
    /// Unique identifier of the parent app for the addon that is going through the activation process
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activation_status" field.</summary>
    public const int ActivationStatusFieldNumber = 3;
    private global::Salesorders.V1.ActivationStatus activationStatus_ = 0;
    /// <summary>
    /// The activation status of a single product
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.ActivationStatus ActivationStatus {
      get { return activationStatus_; }
      set {
        activationStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddonActivation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddonActivation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AddonId != other.AddonId) return false;
      if (AppId != other.AppId) return false;
      if (ActivationStatus != other.ActivationStatus) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AddonId.Length != 0) hash ^= AddonId.GetHashCode();
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (ActivationStatus != 0) hash ^= ActivationStatus.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AddonId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AddonId);
      }
      if (AppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppId);
      }
      if (ActivationStatus != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ActivationStatus);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AddonId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddonId);
      }
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (ActivationStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActivationStatus);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddonActivation other) {
      if (other == null) {
        return;
      }
      if (other.AddonId.Length != 0) {
        AddonId = other.AddonId;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.ActivationStatus != 0) {
        ActivationStatus = other.ActivationStatus;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AddonId = input.ReadString();
            break;
          }
          case 18: {
            AppId = input.ReadString();
            break;
          }
          case 24: {
            activationStatus_ = (global::Salesorders.V1.ActivationStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents a status change on the order to determine who it was updated by and what time it was updated
  /// </summary>
  public sealed partial class StatusHistoryItem : pb::IMessage<StatusHistoryItem> {
    private static readonly pb::MessageParser<StatusHistoryItem> _parser = new pb::MessageParser<StatusHistoryItem>(() => new StatusHistoryItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusHistoryItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.SalesOrdersReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusHistoryItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusHistoryItem(StatusHistoryItem other) : this() {
      userId_ = other.userId_;
      status_ = other.status_;
      Created = other.created_ != null ? other.Created.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusHistoryItem Clone() {
      return new StatusHistoryItem(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    /// The unique identifier of the user that updated the status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Salesorders.V1.Status status_ = 0;
    /// <summary>
    /// The status the order was changed to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// The time the status was created
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusHistoryItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusHistoryItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(Created, other.Created)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (created_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Created);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusHistoryItem other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.created_ != null) {
        if (created_ == null) {
          created_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            status_ = (global::Salesorders.V1.Status) input.ReadEnum();
            break;
          }
          case 26: {
            if (created_ == null) {
              created_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(created_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Data representing an order form submitted by a salesperson
  /// </summary>
  public sealed partial class Order : pb::IMessage<Order> {
    private static readonly pb::MessageParser<Order> _parser = new pb::MessageParser<Order>(() => new Order());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Order> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.SalesOrdersReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order(Order other) : this() {
      orderId_ = other.orderId_;
      salespersonId_ = other.salespersonId_;
      partnerId_ = other.partnerId_;
      businessId_ = other.businessId_;
      marketId_ = other.marketId_;
      opportunityIds_ = other.opportunityIds_.Clone();
      status_ = other.status_;
      RequestedActivation = other.requestedActivation_ != null ? other.RequestedActivation.Clone() : null;
      notes_ = other.notes_;
      packages_ = other.packages_.Clone();
      customFields_ = other.customFields_.Clone();
      commonFields_ = other.commonFields_.Clone();
      Created = other.created_ != null ? other.Created.Clone() : null;
      productActivations_ = other.productActivations_.Clone();
      addonActivations_ = other.addonActivations_.Clone();
      statusHistory_ = other.statusHistory_.Clone();
      declinedReason_ = other.declinedReason_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order Clone() {
      return new Order(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private string orderId_ = "";
    /// <summary>
    /// The unique identifier of the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "salesperson_id" field.</summary>
    public const int SalespersonIdFieldNumber = 2;
    private string salespersonId_ = "";
    /// <summary>
    /// Salesperson who submitted the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SalespersonId {
      get { return salespersonId_; }
      set {
        salespersonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partner_id" field.</summary>
    public const int PartnerIdFieldNumber = 3;
    private string partnerId_ = "";
    /// <summary>
    /// The partner the order is being made under
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PartnerId {
      get { return partnerId_; }
      set {
        partnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_id" field.</summary>
    public const int BusinessIdFieldNumber = 4;
    private string businessId_ = "";
    /// <summary>
    /// The business the order is being made for
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessId {
      get { return businessId_; }
      set {
        businessId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 5;
    private string marketId_ = "";
    /// <summary>
    /// The market the order is being made under
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "opportunity_ids" field.</summary>
    public const int OpportunityIdsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_opportunityIds_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> opportunityIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The opportunities that are being used for the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OpportunityIds {
      get { return opportunityIds_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 7;
    private global::Salesorders.V1.Status status_ = 0;
    /// <summary>
    /// The current status of the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "requested_activation" field.</summary>
    public const int RequestedActivationFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp requestedActivation_;
    /// <summary>
    /// The requested activation date for the order's products
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RequestedActivation {
      get { return requestedActivation_; }
      set {
        requestedActivation_ = value;
      }
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 9;
    private string notes_ = "";
    /// <summary>
    /// Notes for the partner administrator from the salesperson
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Notes {
      get { return notes_; }
      set {
        notes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "packages" field.</summary>
    public const int PackagesFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Salesorders.V1.Package> _repeated_packages_codec
        = pb::FieldCodec.ForMessage(82, global::Salesorders.V1.Package.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.Package> packages_ = new pbc::RepeatedField<global::Salesorders.V1.Package>();
    /// <summary>
    /// Packages in the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.Package> Packages {
      get { return packages_; }
    }

    /// <summary>Field number for the "custom_fields" field.</summary>
    public const int CustomFieldsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Salesorders.V1.CustomField> _repeated_customFields_codec
        = pb::FieldCodec.ForMessage(90, global::Salesorders.V1.CustomField.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.CustomField> customFields_ = new pbc::RepeatedField<global::Salesorders.V1.CustomField>();
    /// <summary>
    /// Custom field answers for the packages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.CustomField> CustomFields {
      get { return customFields_; }
    }

    /// <summary>Field number for the "common_fields" field.</summary>
    public const int CommonFieldsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Salesorders.V1.CommonField> _repeated_commonFields_codec
        = pb::FieldCodec.ForMessage(98, global::Salesorders.V1.CommonField.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.CommonField> commonFields_ = new pbc::RepeatedField<global::Salesorders.V1.CommonField>();
    /// <summary>
    /// Common field answers for the packages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.CommonField> CommonFields {
      get { return commonFields_; }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 13;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// Time the order was submitted by a salesperson
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "product_activations" field.</summary>
    public const int ProductActivationsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Salesorders.V1.ProductActivation> _repeated_productActivations_codec
        = pb::FieldCodec.ForMessage(114, global::Salesorders.V1.ProductActivation.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.ProductActivation> productActivations_ = new pbc::RepeatedField<global::Salesorders.V1.ProductActivation>();
    /// <summary>
    /// The list of products with their corresponding activation status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.ProductActivation> ProductActivations {
      get { return productActivations_; }
    }

    /// <summary>Field number for the "addon_activations" field.</summary>
    public const int AddonActivationsFieldNumber = 18;
    private static readonly pb::FieldCodec<global::Salesorders.V1.AddonActivation> _repeated_addonActivations_codec
        = pb::FieldCodec.ForMessage(146, global::Salesorders.V1.AddonActivation.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.AddonActivation> addonActivations_ = new pbc::RepeatedField<global::Salesorders.V1.AddonActivation>();
    /// <summary>
    /// The list of addons with their corresponding activation status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.AddonActivation> AddonActivations {
      get { return addonActivations_; }
    }

    /// <summary>Field number for the "status_history" field.</summary>
    public const int StatusHistoryFieldNumber = 19;
    private static readonly pb::FieldCodec<global::Salesorders.V1.StatusHistoryItem> _repeated_statusHistory_codec
        = pb::FieldCodec.ForMessage(154, global::Salesorders.V1.StatusHistoryItem.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.StatusHistoryItem> statusHistory_ = new pbc::RepeatedField<global::Salesorders.V1.StatusHistoryItem>();
    /// <summary>
    /// The historical list of status updates that have taken place on the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.StatusHistoryItem> StatusHistory {
      get { return statusHistory_; }
    }

    /// <summary>Field number for the "declined_reason" field.</summary>
    public const int DeclinedReasonFieldNumber = 20;
    private string declinedReason_ = "";
    /// <summary>
    /// The reason the order was declined
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeclinedReason {
      get { return declinedReason_; }
      set {
        declinedReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Order);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Order other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (SalespersonId != other.SalespersonId) return false;
      if (PartnerId != other.PartnerId) return false;
      if (BusinessId != other.BusinessId) return false;
      if (MarketId != other.MarketId) return false;
      if(!opportunityIds_.Equals(other.opportunityIds_)) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(RequestedActivation, other.RequestedActivation)) return false;
      if (Notes != other.Notes) return false;
      if(!packages_.Equals(other.packages_)) return false;
      if(!customFields_.Equals(other.customFields_)) return false;
      if(!commonFields_.Equals(other.commonFields_)) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if(!productActivations_.Equals(other.productActivations_)) return false;
      if(!addonActivations_.Equals(other.addonActivations_)) return false;
      if(!statusHistory_.Equals(other.statusHistory_)) return false;
      if (DeclinedReason != other.DeclinedReason) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (SalespersonId.Length != 0) hash ^= SalespersonId.GetHashCode();
      if (PartnerId.Length != 0) hash ^= PartnerId.GetHashCode();
      if (BusinessId.Length != 0) hash ^= BusinessId.GetHashCode();
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      hash ^= opportunityIds_.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (requestedActivation_ != null) hash ^= RequestedActivation.GetHashCode();
      if (Notes.Length != 0) hash ^= Notes.GetHashCode();
      hash ^= packages_.GetHashCode();
      hash ^= customFields_.GetHashCode();
      hash ^= commonFields_.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      hash ^= productActivations_.GetHashCode();
      hash ^= addonActivations_.GetHashCode();
      hash ^= statusHistory_.GetHashCode();
      if (DeclinedReason.Length != 0) hash ^= DeclinedReason.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
      if (SalespersonId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SalespersonId);
      }
      if (PartnerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PartnerId);
      }
      if (BusinessId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BusinessId);
      }
      if (MarketId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MarketId);
      }
      opportunityIds_.WriteTo(output, _repeated_opportunityIds_codec);
      if (Status != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Status);
      }
      if (requestedActivation_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RequestedActivation);
      }
      if (Notes.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Notes);
      }
      packages_.WriteTo(output, _repeated_packages_codec);
      customFields_.WriteTo(output, _repeated_customFields_codec);
      commonFields_.WriteTo(output, _repeated_commonFields_codec);
      if (created_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Created);
      }
      productActivations_.WriteTo(output, _repeated_productActivations_codec);
      addonActivations_.WriteTo(output, _repeated_addonActivations_codec);
      statusHistory_.WriteTo(output, _repeated_statusHistory_codec);
      if (DeclinedReason.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(DeclinedReason);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (SalespersonId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SalespersonId);
      }
      if (PartnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartnerId);
      }
      if (BusinessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessId);
      }
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      size += opportunityIds_.CalculateSize(_repeated_opportunityIds_codec);
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (requestedActivation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestedActivation);
      }
      if (Notes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notes);
      }
      size += packages_.CalculateSize(_repeated_packages_codec);
      size += customFields_.CalculateSize(_repeated_customFields_codec);
      size += commonFields_.CalculateSize(_repeated_commonFields_codec);
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      size += productActivations_.CalculateSize(_repeated_productActivations_codec);
      size += addonActivations_.CalculateSize(_repeated_addonActivations_codec);
      size += statusHistory_.CalculateSize(_repeated_statusHistory_codec);
      if (DeclinedReason.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeclinedReason);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Order other) {
      if (other == null) {
        return;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      if (other.SalespersonId.Length != 0) {
        SalespersonId = other.SalespersonId;
      }
      if (other.PartnerId.Length != 0) {
        PartnerId = other.PartnerId;
      }
      if (other.BusinessId.Length != 0) {
        BusinessId = other.BusinessId;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      opportunityIds_.Add(other.opportunityIds_);
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.requestedActivation_ != null) {
        if (requestedActivation_ == null) {
          requestedActivation_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RequestedActivation.MergeFrom(other.RequestedActivation);
      }
      if (other.Notes.Length != 0) {
        Notes = other.Notes;
      }
      packages_.Add(other.packages_);
      customFields_.Add(other.customFields_);
      commonFields_.Add(other.commonFields_);
      if (other.created_ != null) {
        if (created_ == null) {
          created_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      productActivations_.Add(other.productActivations_);
      addonActivations_.Add(other.addonActivations_);
      statusHistory_.Add(other.statusHistory_);
      if (other.DeclinedReason.Length != 0) {
        DeclinedReason = other.DeclinedReason;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
          case 18: {
            SalespersonId = input.ReadString();
            break;
          }
          case 26: {
            PartnerId = input.ReadString();
            break;
          }
          case 34: {
            BusinessId = input.ReadString();
            break;
          }
          case 42: {
            MarketId = input.ReadString();
            break;
          }
          case 50: {
            opportunityIds_.AddEntriesFrom(input, _repeated_opportunityIds_codec);
            break;
          }
          case 56: {
            status_ = (global::Salesorders.V1.Status) input.ReadEnum();
            break;
          }
          case 66: {
            if (requestedActivation_ == null) {
              requestedActivation_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(requestedActivation_);
            break;
          }
          case 74: {
            Notes = input.ReadString();
            break;
          }
          case 82: {
            packages_.AddEntriesFrom(input, _repeated_packages_codec);
            break;
          }
          case 90: {
            customFields_.AddEntriesFrom(input, _repeated_customFields_codec);
            break;
          }
          case 98: {
            commonFields_.AddEntriesFrom(input, _repeated_commonFields_codec);
            break;
          }
          case 106: {
            if (created_ == null) {
              created_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(created_);
            break;
          }
          case 114: {
            productActivations_.AddEntriesFrom(input, _repeated_productActivations_codec);
            break;
          }
          case 146: {
            addonActivations_.AddEntriesFrom(input, _repeated_addonActivations_codec);
            break;
          }
          case 154: {
            statusHistory_.AddEntriesFrom(input, _repeated_statusHistory_codec);
            break;
          }
          case 162: {
            DeclinedReason = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
