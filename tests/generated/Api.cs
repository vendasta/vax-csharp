// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sales_orders/v1/api.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Salesorders.V1 {

  /// <summary>Holder for reflection information generated from sales_orders/v1/api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for sales_orders/v1/api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlzYWxlc19vcmRlcnMvdjEvYXBpLnByb3RvEg5zYWxlc29yZGVycy52MRof",
            "Z29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoic2FsZXNfb3JkZXJz",
            "L3YxL3NhbGVzX29yZGVycy5wcm90byLiAgoXQ3JlYXRlU2FsZXNPcmRlclJl",
            "cXVlc3QSFgoOc2FsZXNwZXJzb25faWQYASABKAkSEgoKcGFydG5lcl9pZBgC",
            "IAEoCRITCgtidXNpbmVzc19pZBgDIAEoCRIRCgltYXJrZXRfaWQYBCABKAkS",
            "FwoPb3Bwb3J0dW5pdHlfaWRzGAUgAygJEjgKFHJlcXVlc3RlZF9hY3RpdmF0",
            "aW9uGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBINCgVub3Rl",
            "cxgHIAEoCRIpCghwYWNrYWdlcxgIIAMoCzIXLnNhbGVzb3JkZXJzLnYxLlBh",
            "Y2thZ2USMgoNY3VzdG9tX2ZpZWxkcxgJIAMoCzIbLnNhbGVzb3JkZXJzLnYx",
            "LkN1c3RvbUZpZWxkEjIKDWNvbW1vbl9maWVsZHMYCiADKAsyGy5zYWxlc29y",
            "ZGVycy52MS5Db21tb25GaWVsZCIsChhDcmVhdGVTYWxlc09yZGVyUmVzcG9u",
            "c2USEAoIb3JkZXJfaWQYASABKAkiPQoUR2V0U2FsZXNPcmRlclJlcXVlc3QS",
            "EAoIb3JkZXJfaWQYASABKAkSEwoLYnVzaW5lc3NfaWQYAiABKAkiPQoVR2V0",
            "U2FsZXNPcmRlclJlc3BvbnNlEiQKBW9yZGVyGAEgASgLMhUuc2FsZXNvcmRl",
            "cnMudjEuT3JkZXIi4gYKFUxpc3RTYWxlc09yZGVyUmVxdWVzdBISCgpwYXJ0",
            "bmVyX2lkGAEgASgJEj4KB2ZpbHRlcnMYAiABKAsyLS5zYWxlc29yZGVycy52",
            "MS5MaXN0U2FsZXNPcmRlclJlcXVlc3QuRmlsdGVycxJFCgtzb3J0X29wdGlv",
            "bhgDIAEoCzIwLnNhbGVzb3JkZXJzLnYxLkxpc3RTYWxlc09yZGVyUmVxdWVz",
            "dC5Tb3J0T3B0aW9uEg4KBmN1cnNvchgEIAEoCRIRCglwYWdlX3NpemUYBSAB",
            "KAMacQoPRGF0ZVJhbmdlRmlsdGVyEi8KC2JlZ2luX3JhbmdlGAEgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBItCgllbmRfcmFuZ2UYAiABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGpACCgdGaWx0ZXJzEhEKCW1h",
            "cmtldF9pZBgBIAEoCRIWCg5zYWxlc3BlcnNvbl9pZBgCIAEoCRJGCgdjcmVh",
            "dGVkGAMgASgLMjUuc2FsZXNvcmRlcnMudjEuTGlzdFNhbGVzT3JkZXJSZXF1",
            "ZXN0LkRhdGVSYW5nZUZpbHRlchJTChRyZXF1ZXN0ZWRfYWN0aXZhdGlvbhgE",
            "IAEoCzI1LnNhbGVzb3JkZXJzLnYxLkxpc3RTYWxlc09yZGVyUmVxdWVzdC5E",
            "YXRlUmFuZ2VGaWx0ZXISKAoIc3RhdHVzZXMYBSADKA4yFi5zYWxlc29yZGVy",
            "cy52MS5TdGF0dXMSEwoLYnVzaW5lc3NfaWQYBiABKAkalAEKClNvcnRPcHRp",
            "b24SRgoJZGlyZWN0aW9uGAEgASgOMjMuc2FsZXNvcmRlcnMudjEuTGlzdFNh",
            "bGVzT3JkZXJSZXF1ZXN0LlNvcnREaXJlY3Rpb24SPgoFZmllbGQYAiABKA4y",
            "Ly5zYWxlc29yZGVycy52MS5MaXN0U2FsZXNPcmRlclJlcXVlc3QuU29ydEZp",
            "ZWxkIj4KCVNvcnRGaWVsZBIYChRSRVFVRVNURURfQUNUSVZBVElPThAAEgsK",
            "B0NSRUFURUQQARIKCgZTVEFUVVMQAiIuCg1Tb3J0RGlyZWN0aW9uEg0KCUFT",
            "Q0VORElORxAAEg4KCkRFU0NFTkRJTkcQASJmChZMaXN0U2FsZXNPcmRlclJl",
            "c3BvbnNlEiUKBm9yZGVycxgBIAMoCzIVLnNhbGVzb3JkZXJzLnYxLk9yZGVy",
            "EhMKC25leHRfY3Vyc29yGAIgASgJEhAKCGhhc19tb3JlGAMgASgIIkEKGEFw",
            "cHJvdmVTYWxlc09yZGVyUmVxdWVzdBIQCghvcmRlcl9pZBgBIAEoCRITCgti",
            "dXNpbmVzc19pZBgCIAEoCSJBChlBcHByb3ZlU2FsZXNPcmRlclJlc3BvbnNl",
            "EiQKBW9yZGVyGAEgASgLMhUuc2FsZXNvcmRlcnMudjEuT3JkZXIiWgoYRGVj",
            "bGluZVNhbGVzT3JkZXJSZXF1ZXN0EhAKCG9yZGVyX2lkGAEgASgJEhMKC2J1",
            "c2luZXNzX2lkGAIgASgJEhcKD2RlY2xpbmVkX3JlYXNvbhgDIAEoCSJBChlE",
            "ZWNsaW5lU2FsZXNPcmRlclJlc3BvbnNlEiQKBW9yZGVyGAEgASgLMhUuc2Fs",
            "ZXNvcmRlcnMudjEuT3JkZXIiqAEKF0FjdGl2YXRlUHJvZHVjdHNSZXF1ZXN0",
            "EhAKCG9yZGVyX2lkGAEgASgJEhMKC2J1c2luZXNzX2lkGAIgASgJEjIKDWN1",
            "c3RvbV9maWVsZHMYAyADKAsyGy5zYWxlc29yZGVycy52MS5DdXN0b21GaWVs",
            "ZBIyCg1jb21tb25fZmllbGRzGAQgAygLMhsuc2FsZXNvcmRlcnMudjEuQ29t",
            "bW9uRmllbGQiQAoYQWN0aXZhdGVQcm9kdWN0c1Jlc3BvbnNlEiQKBW9yZGVy",
            "GAEgASgLMhUuc2FsZXNvcmRlcnMudjEuT3JkZXIy7gQKC1NhbGVzT3JkZXJz",
            "EmUKEENyZWF0ZVNhbGVzT3JkZXISJy5zYWxlc29yZGVycy52MS5DcmVhdGVT",
            "YWxlc09yZGVyUmVxdWVzdBooLnNhbGVzb3JkZXJzLnYxLkNyZWF0ZVNhbGVz",
            "T3JkZXJSZXNwb25zZRJcCg1HZXRTYWxlc09yZGVyEiQuc2FsZXNvcmRlcnMu",
            "djEuR2V0U2FsZXNPcmRlclJlcXVlc3QaJS5zYWxlc29yZGVycy52MS5HZXRT",
            "YWxlc09yZGVyUmVzcG9uc2USXwoOTGlzdFNhbGVzT3JkZXISJS5zYWxlc29y",
            "ZGVycy52MS5MaXN0U2FsZXNPcmRlclJlcXVlc3QaJi5zYWxlc29yZGVycy52",
            "MS5MaXN0U2FsZXNPcmRlclJlc3BvbnNlEmgKEUFwcHJvdmVTYWxlc09yZGVy",
            "Eiguc2FsZXNvcmRlcnMudjEuQXBwcm92ZVNhbGVzT3JkZXJSZXF1ZXN0Giku",
            "c2FsZXNvcmRlcnMudjEuQXBwcm92ZVNhbGVzT3JkZXJSZXNwb25zZRJoChFE",
            "ZWNsaW5lU2FsZXNPcmRlchIoLnNhbGVzb3JkZXJzLnYxLkRlY2xpbmVTYWxl",
            "c09yZGVyUmVxdWVzdBopLnNhbGVzb3JkZXJzLnYxLkRlY2xpbmVTYWxlc09y",
            "ZGVyUmVzcG9uc2USZQoQQWN0aXZhdGVQcm9kdWN0cxInLnNhbGVzb3JkZXJz",
            "LnYxLkFjdGl2YXRlUHJvZHVjdHNSZXF1ZXN0Giguc2FsZXNvcmRlcnMudjEu",
            "QWN0aXZhdGVQcm9kdWN0c1Jlc3BvbnNlQjEKJWNvbS52ZW5kYXN0YS5zYWxl",
            "c29yZGVycy52MS5nZW5lcmF0ZWRCCEFwaVByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Salesorders.V1.SalesOrdersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.CreateSalesOrderRequest), global::Salesorders.V1.CreateSalesOrderRequest.Parser, new[]{ "SalespersonId", "PartnerId", "BusinessId", "MarketId", "OpportunityIds", "RequestedActivation", "Notes", "Packages", "CustomFields", "CommonFields" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.CreateSalesOrderResponse), global::Salesorders.V1.CreateSalesOrderResponse.Parser, new[]{ "OrderId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.GetSalesOrderRequest), global::Salesorders.V1.GetSalesOrderRequest.Parser, new[]{ "OrderId", "BusinessId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.GetSalesOrderResponse), global::Salesorders.V1.GetSalesOrderResponse.Parser, new[]{ "Order" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.ListSalesOrderRequest), global::Salesorders.V1.ListSalesOrderRequest.Parser, new[]{ "PartnerId", "Filters", "SortOption", "Cursor", "PageSize" }, null, new[]{ typeof(global::Salesorders.V1.ListSalesOrderRequest.Types.SortField), typeof(global::Salesorders.V1.ListSalesOrderRequest.Types.SortDirection) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.ListSalesOrderRequest.Types.DateRangeFilter), global::Salesorders.V1.ListSalesOrderRequest.Types.DateRangeFilter.Parser, new[]{ "BeginRange", "EndRange" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.ListSalesOrderRequest.Types.Filters), global::Salesorders.V1.ListSalesOrderRequest.Types.Filters.Parser, new[]{ "MarketId", "SalespersonId", "Created", "RequestedActivation", "Statuses", "BusinessId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.ListSalesOrderRequest.Types.SortOption), global::Salesorders.V1.ListSalesOrderRequest.Types.SortOption.Parser, new[]{ "Direction", "Field" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.ListSalesOrderResponse), global::Salesorders.V1.ListSalesOrderResponse.Parser, new[]{ "Orders", "NextCursor", "HasMore" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.ApproveSalesOrderRequest), global::Salesorders.V1.ApproveSalesOrderRequest.Parser, new[]{ "OrderId", "BusinessId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.ApproveSalesOrderResponse), global::Salesorders.V1.ApproveSalesOrderResponse.Parser, new[]{ "Order" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.DeclineSalesOrderRequest), global::Salesorders.V1.DeclineSalesOrderRequest.Parser, new[]{ "OrderId", "BusinessId", "DeclinedReason" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.DeclineSalesOrderResponse), global::Salesorders.V1.DeclineSalesOrderResponse.Parser, new[]{ "Order" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.ActivateProductsRequest), global::Salesorders.V1.ActivateProductsRequest.Parser, new[]{ "OrderId", "BusinessId", "CustomFields", "CommonFields" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Salesorders.V1.ActivateProductsResponse), global::Salesorders.V1.ActivateProductsResponse.Parser, new[]{ "Order" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Containing information to create a new order
  /// </summary>
  public sealed partial class CreateSalesOrderRequest : pb::IMessage<CreateSalesOrderRequest> {
    private static readonly pb::MessageParser<CreateSalesOrderRequest> _parser = new pb::MessageParser<CreateSalesOrderRequest>(() => new CreateSalesOrderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSalesOrderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSalesOrderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSalesOrderRequest(CreateSalesOrderRequest other) : this() {
      salespersonId_ = other.salespersonId_;
      partnerId_ = other.partnerId_;
      businessId_ = other.businessId_;
      marketId_ = other.marketId_;
      opportunityIds_ = other.opportunityIds_.Clone();
      RequestedActivation = other.requestedActivation_ != null ? other.RequestedActivation.Clone() : null;
      notes_ = other.notes_;
      packages_ = other.packages_.Clone();
      customFields_ = other.customFields_.Clone();
      commonFields_ = other.commonFields_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSalesOrderRequest Clone() {
      return new CreateSalesOrderRequest(this);
    }

    /// <summary>Field number for the "salesperson_id" field.</summary>
    public const int SalespersonIdFieldNumber = 1;
    private string salespersonId_ = "";
    /// <summary>
    /// ID of the salesperson that submitted the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SalespersonId {
      get { return salespersonId_; }
      set {
        salespersonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partner_id" field.</summary>
    public const int PartnerIdFieldNumber = 2;
    private string partnerId_ = "";
    /// <summary>
    /// ID of the partner that the order belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PartnerId {
      get { return partnerId_; }
      set {
        partnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_id" field.</summary>
    public const int BusinessIdFieldNumber = 3;
    private string businessId_ = "";
    /// <summary>
    /// ID of the business that the order is for
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessId {
      get { return businessId_; }
      set {
        businessId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 4;
    private string marketId_ = "";
    /// <summary>
    /// ID of the market that the order belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "opportunity_ids" field.</summary>
    public const int OpportunityIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_opportunityIds_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> opportunityIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Opportunity id(s) that the order is fulfilling
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OpportunityIds {
      get { return opportunityIds_; }
    }

    /// <summary>Field number for the "requested_activation" field.</summary>
    public const int RequestedActivationFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp requestedActivation_;
    /// <summary>
    /// Time submitted by a salesperson that indicates when an administrator should activate the products on the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RequestedActivation {
      get { return requestedActivation_; }
      set {
        requestedActivation_ = value;
      }
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 7;
    private string notes_ = "";
    /// <summary>
    /// Additional notes written by a salesperson
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Notes {
      get { return notes_; }
      set {
        notes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "packages" field.</summary>
    public const int PackagesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Salesorders.V1.Package> _repeated_packages_codec
        = pb::FieldCodec.ForMessage(66, global::Salesorders.V1.Package.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.Package> packages_ = new pbc::RepeatedField<global::Salesorders.V1.Package>();
    /// <summary>
    /// Data for the package(s) information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.Package> Packages {
      get { return packages_; }
    }

    /// <summary>Field number for the "custom_fields" field.</summary>
    public const int CustomFieldsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Salesorders.V1.CustomField> _repeated_customFields_codec
        = pb::FieldCodec.ForMessage(74, global::Salesorders.V1.CustomField.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.CustomField> customFields_ = new pbc::RepeatedField<global::Salesorders.V1.CustomField>();
    /// <summary>
    /// A list of additional unique information pertaining to an individual product
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.CustomField> CustomFields {
      get { return customFields_; }
    }

    /// <summary>Field number for the "common_fields" field.</summary>
    public const int CommonFieldsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Salesorders.V1.CommonField> _repeated_commonFields_codec
        = pb::FieldCodec.ForMessage(82, global::Salesorders.V1.CommonField.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.CommonField> commonFields_ = new pbc::RepeatedField<global::Salesorders.V1.CommonField>();
    /// <summary>
    /// A list of additional information that is shared across multiple products
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.CommonField> CommonFields {
      get { return commonFields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSalesOrderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSalesOrderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SalespersonId != other.SalespersonId) return false;
      if (PartnerId != other.PartnerId) return false;
      if (BusinessId != other.BusinessId) return false;
      if (MarketId != other.MarketId) return false;
      if(!opportunityIds_.Equals(other.opportunityIds_)) return false;
      if (!object.Equals(RequestedActivation, other.RequestedActivation)) return false;
      if (Notes != other.Notes) return false;
      if(!packages_.Equals(other.packages_)) return false;
      if(!customFields_.Equals(other.customFields_)) return false;
      if(!commonFields_.Equals(other.commonFields_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SalespersonId.Length != 0) hash ^= SalespersonId.GetHashCode();
      if (PartnerId.Length != 0) hash ^= PartnerId.GetHashCode();
      if (BusinessId.Length != 0) hash ^= BusinessId.GetHashCode();
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      hash ^= opportunityIds_.GetHashCode();
      if (requestedActivation_ != null) hash ^= RequestedActivation.GetHashCode();
      if (Notes.Length != 0) hash ^= Notes.GetHashCode();
      hash ^= packages_.GetHashCode();
      hash ^= customFields_.GetHashCode();
      hash ^= commonFields_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SalespersonId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SalespersonId);
      }
      if (PartnerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PartnerId);
      }
      if (BusinessId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BusinessId);
      }
      if (MarketId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MarketId);
      }
      opportunityIds_.WriteTo(output, _repeated_opportunityIds_codec);
      if (requestedActivation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RequestedActivation);
      }
      if (Notes.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Notes);
      }
      packages_.WriteTo(output, _repeated_packages_codec);
      customFields_.WriteTo(output, _repeated_customFields_codec);
      commonFields_.WriteTo(output, _repeated_commonFields_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SalespersonId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SalespersonId);
      }
      if (PartnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartnerId);
      }
      if (BusinessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessId);
      }
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      size += opportunityIds_.CalculateSize(_repeated_opportunityIds_codec);
      if (requestedActivation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestedActivation);
      }
      if (Notes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notes);
      }
      size += packages_.CalculateSize(_repeated_packages_codec);
      size += customFields_.CalculateSize(_repeated_customFields_codec);
      size += commonFields_.CalculateSize(_repeated_commonFields_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSalesOrderRequest other) {
      if (other == null) {
        return;
      }
      if (other.SalespersonId.Length != 0) {
        SalespersonId = other.SalespersonId;
      }
      if (other.PartnerId.Length != 0) {
        PartnerId = other.PartnerId;
      }
      if (other.BusinessId.Length != 0) {
        BusinessId = other.BusinessId;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      opportunityIds_.Add(other.opportunityIds_);
      if (other.requestedActivation_ != null) {
        if (requestedActivation_ == null) {
          requestedActivation_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RequestedActivation.MergeFrom(other.RequestedActivation);
      }
      if (other.Notes.Length != 0) {
        Notes = other.Notes;
      }
      packages_.Add(other.packages_);
      customFields_.Add(other.customFields_);
      commonFields_.Add(other.commonFields_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SalespersonId = input.ReadString();
            break;
          }
          case 18: {
            PartnerId = input.ReadString();
            break;
          }
          case 26: {
            BusinessId = input.ReadString();
            break;
          }
          case 34: {
            MarketId = input.ReadString();
            break;
          }
          case 42: {
            opportunityIds_.AddEntriesFrom(input, _repeated_opportunityIds_codec);
            break;
          }
          case 50: {
            if (requestedActivation_ == null) {
              requestedActivation_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(requestedActivation_);
            break;
          }
          case 58: {
            Notes = input.ReadString();
            break;
          }
          case 66: {
            packages_.AddEntriesFrom(input, _repeated_packages_codec);
            break;
          }
          case 74: {
            customFields_.AddEntriesFrom(input, _repeated_customFields_codec);
            break;
          }
          case 82: {
            commonFields_.AddEntriesFrom(input, _repeated_commonFields_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response of creating an order
  /// </summary>
  public sealed partial class CreateSalesOrderResponse : pb::IMessage<CreateSalesOrderResponse> {
    private static readonly pb::MessageParser<CreateSalesOrderResponse> _parser = new pb::MessageParser<CreateSalesOrderResponse>(() => new CreateSalesOrderResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSalesOrderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSalesOrderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSalesOrderResponse(CreateSalesOrderResponse other) : this() {
      orderId_ = other.orderId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSalesOrderResponse Clone() {
      return new CreateSalesOrderResponse(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private string orderId_ = "";
    /// <summary>
    /// Unique identifier of an order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSalesOrderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSalesOrderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSalesOrderResponse other) {
      if (other == null) {
        return;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Containing information to get an order
  /// </summary>
  public sealed partial class GetSalesOrderRequest : pb::IMessage<GetSalesOrderRequest> {
    private static readonly pb::MessageParser<GetSalesOrderRequest> _parser = new pb::MessageParser<GetSalesOrderRequest>(() => new GetSalesOrderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSalesOrderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSalesOrderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSalesOrderRequest(GetSalesOrderRequest other) : this() {
      orderId_ = other.orderId_;
      businessId_ = other.businessId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSalesOrderRequest Clone() {
      return new GetSalesOrderRequest(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private string orderId_ = "";
    /// <summary>
    /// Unique identifier of an order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_id" field.</summary>
    public const int BusinessIdFieldNumber = 2;
    private string businessId_ = "";
    /// <summary>
    /// The business the order belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessId {
      get { return businessId_; }
      set {
        businessId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSalesOrderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSalesOrderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (BusinessId != other.BusinessId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (BusinessId.Length != 0) hash ^= BusinessId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
      if (BusinessId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BusinessId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (BusinessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSalesOrderRequest other) {
      if (other == null) {
        return;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      if (other.BusinessId.Length != 0) {
        BusinessId = other.BusinessId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
          case 18: {
            BusinessId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response of getting an order
  /// </summary>
  public sealed partial class GetSalesOrderResponse : pb::IMessage<GetSalesOrderResponse> {
    private static readonly pb::MessageParser<GetSalesOrderResponse> _parser = new pb::MessageParser<GetSalesOrderResponse>(() => new GetSalesOrderResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSalesOrderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSalesOrderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSalesOrderResponse(GetSalesOrderResponse other) : this() {
      Order = other.order_ != null ? other.Order.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSalesOrderResponse Clone() {
      return new GetSalesOrderResponse(this);
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 1;
    private global::Salesorders.V1.Order order_;
    /// <summary>
    /// Sales order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.Order Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSalesOrderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSalesOrderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Order, other.Order)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (order_ != null) hash ^= Order.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (order_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Order);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (order_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Order);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSalesOrderResponse other) {
      if (other == null) {
        return;
      }
      if (other.order_ != null) {
        if (order_ == null) {
          order_ = new global::Salesorders.V1.Order();
        }
        Order.MergeFrom(other.Order);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (order_ == null) {
              order_ = new global::Salesorders.V1.Order();
            }
            input.ReadMessage(order_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to get a list of orders for a partner
  /// </summary>
  public sealed partial class ListSalesOrderRequest : pb::IMessage<ListSalesOrderRequest> {
    private static readonly pb::MessageParser<ListSalesOrderRequest> _parser = new pb::MessageParser<ListSalesOrderRequest>(() => new ListSalesOrderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListSalesOrderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.ApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSalesOrderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSalesOrderRequest(ListSalesOrderRequest other) : this() {
      partnerId_ = other.partnerId_;
      Filters = other.filters_ != null ? other.Filters.Clone() : null;
      SortOption = other.sortOption_ != null ? other.SortOption.Clone() : null;
      cursor_ = other.cursor_;
      pageSize_ = other.pageSize_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSalesOrderRequest Clone() {
      return new ListSalesOrderRequest(this);
    }

    /// <summary>Field number for the "partner_id" field.</summary>
    public const int PartnerIdFieldNumber = 1;
    private string partnerId_ = "";
    /// <summary>
    /// partner id for partner making request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PartnerId {
      get { return partnerId_; }
      set {
        partnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 2;
    private global::Salesorders.V1.ListSalesOrderRequest.Types.Filters filters_;
    /// <summary>
    /// Filters for the request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.ListSalesOrderRequest.Types.Filters Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }

    /// <summary>Field number for the "sort_option" field.</summary>
    public const int SortOptionFieldNumber = 3;
    private global::Salesorders.V1.ListSalesOrderRequest.Types.SortOption sortOption_;
    /// <summary>
    /// Sort options for the request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.ListSalesOrderRequest.Types.SortOption SortOption {
      get { return sortOption_; }
      set {
        sortOption_ = value;
      }
    }

    /// <summary>Field number for the "cursor" field.</summary>
    public const int CursorFieldNumber = 4;
    private string cursor_ = "";
    /// <summary>
    /// current cursor position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cursor {
      get { return cursor_; }
      set {
        cursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 5;
    private long pageSize_;
    /// <summary>
    /// size of the page to list
    /// 0 assumes the default page size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListSalesOrderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListSalesOrderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PartnerId != other.PartnerId) return false;
      if (!object.Equals(Filters, other.Filters)) return false;
      if (!object.Equals(SortOption, other.SortOption)) return false;
      if (Cursor != other.Cursor) return false;
      if (PageSize != other.PageSize) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PartnerId.Length != 0) hash ^= PartnerId.GetHashCode();
      if (filters_ != null) hash ^= Filters.GetHashCode();
      if (sortOption_ != null) hash ^= SortOption.GetHashCode();
      if (Cursor.Length != 0) hash ^= Cursor.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PartnerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PartnerId);
      }
      if (filters_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Filters);
      }
      if (sortOption_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SortOption);
      }
      if (Cursor.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Cursor);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(PageSize);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PartnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartnerId);
      }
      if (filters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filters);
      }
      if (sortOption_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SortOption);
      }
      if (Cursor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cursor);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListSalesOrderRequest other) {
      if (other == null) {
        return;
      }
      if (other.PartnerId.Length != 0) {
        PartnerId = other.PartnerId;
      }
      if (other.filters_ != null) {
        if (filters_ == null) {
          filters_ = new global::Salesorders.V1.ListSalesOrderRequest.Types.Filters();
        }
        Filters.MergeFrom(other.Filters);
      }
      if (other.sortOption_ != null) {
        if (sortOption_ == null) {
          sortOption_ = new global::Salesorders.V1.ListSalesOrderRequest.Types.SortOption();
        }
        SortOption.MergeFrom(other.SortOption);
      }
      if (other.Cursor.Length != 0) {
        Cursor = other.Cursor;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PartnerId = input.ReadString();
            break;
          }
          case 18: {
            if (filters_ == null) {
              filters_ = new global::Salesorders.V1.ListSalesOrderRequest.Types.Filters();
            }
            input.ReadMessage(filters_);
            break;
          }
          case 26: {
            if (sortOption_ == null) {
              sortOption_ = new global::Salesorders.V1.ListSalesOrderRequest.Types.SortOption();
            }
            input.ReadMessage(sortOption_);
            break;
          }
          case 34: {
            Cursor = input.ReadString();
            break;
          }
          case 40: {
            PageSize = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ListSalesOrderRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The field to sort a result set on
      /// </summary>
      public enum SortField {
        [pbr::OriginalName("REQUESTED_ACTIVATION")] RequestedActivation = 0,
        [pbr::OriginalName("CREATED")] Created = 1,
        [pbr::OriginalName("STATUS")] Status = 2,
      }

      /// <summary>
      /// The directions that a result set can be sorted in
      /// </summary>
      public enum SortDirection {
        [pbr::OriginalName("ASCENDING")] Ascending = 0,
        [pbr::OriginalName("DESCENDING")] Descending = 1,
      }

      /// <summary>
      /// Begin and end of date range
      /// </summary>
      public sealed partial class DateRangeFilter : pb::IMessage<DateRangeFilter> {
        private static readonly pb::MessageParser<DateRangeFilter> _parser = new pb::MessageParser<DateRangeFilter>(() => new DateRangeFilter());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DateRangeFilter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Salesorders.V1.ListSalesOrderRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DateRangeFilter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DateRangeFilter(DateRangeFilter other) : this() {
          BeginRange = other.beginRange_ != null ? other.BeginRange.Clone() : null;
          EndRange = other.endRange_ != null ? other.EndRange.Clone() : null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DateRangeFilter Clone() {
          return new DateRangeFilter(this);
        }

        /// <summary>Field number for the "begin_range" field.</summary>
        public const int BeginRangeFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp beginRange_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp BeginRange {
          get { return beginRange_; }
          set {
            beginRange_ = value;
          }
        }

        /// <summary>Field number for the "end_range" field.</summary>
        public const int EndRangeFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp endRange_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp EndRange {
          get { return endRange_; }
          set {
            endRange_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DateRangeFilter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DateRangeFilter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(BeginRange, other.BeginRange)) return false;
          if (!object.Equals(EndRange, other.EndRange)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (beginRange_ != null) hash ^= BeginRange.GetHashCode();
          if (endRange_ != null) hash ^= EndRange.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (beginRange_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(BeginRange);
          }
          if (endRange_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(EndRange);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (beginRange_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BeginRange);
          }
          if (endRange_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndRange);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DateRangeFilter other) {
          if (other == null) {
            return;
          }
          if (other.beginRange_ != null) {
            if (beginRange_ == null) {
              beginRange_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            BeginRange.MergeFrom(other.BeginRange);
          }
          if (other.endRange_ != null) {
            if (endRange_ == null) {
              endRange_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            EndRange.MergeFrom(other.EndRange);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                if (beginRange_ == null) {
                  beginRange_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(beginRange_);
                break;
              }
              case 18: {
                if (endRange_ == null) {
                  endRange_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(endRange_);
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Filters to list sales orders based on given filter criterias
      /// </summary>
      public sealed partial class Filters : pb::IMessage<Filters> {
        private static readonly pb::MessageParser<Filters> _parser = new pb::MessageParser<Filters>(() => new Filters());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Filters> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Salesorders.V1.ListSalesOrderRequest.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Filters() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Filters(Filters other) : this() {
          marketId_ = other.marketId_;
          salespersonId_ = other.salespersonId_;
          Created = other.created_ != null ? other.Created.Clone() : null;
          RequestedActivation = other.requestedActivation_ != null ? other.RequestedActivation.Clone() : null;
          statuses_ = other.statuses_.Clone();
          businessId_ = other.businessId_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Filters Clone() {
          return new Filters(this);
        }

        /// <summary>Field number for the "market_id" field.</summary>
        public const int MarketIdFieldNumber = 1;
        private string marketId_ = "";
        /// <summary>
        /// Singular market filter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MarketId {
          get { return marketId_; }
          set {
            marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "salesperson_id" field.</summary>
        public const int SalespersonIdFieldNumber = 2;
        private string salespersonId_ = "";
        /// <summary>
        /// Singular salesperson filter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SalespersonId {
          get { return salespersonId_; }
          set {
            salespersonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "created" field.</summary>
        public const int CreatedFieldNumber = 3;
        private global::Salesorders.V1.ListSalesOrderRequest.Types.DateRangeFilter created_;
        /// <summary>
        /// Created date range filter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Salesorders.V1.ListSalesOrderRequest.Types.DateRangeFilter Created {
          get { return created_; }
          set {
            created_ = value;
          }
        }

        /// <summary>Field number for the "requested_activation" field.</summary>
        public const int RequestedActivationFieldNumber = 4;
        private global::Salesorders.V1.ListSalesOrderRequest.Types.DateRangeFilter requestedActivation_;
        /// <summary>
        /// Requested activation date filter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Salesorders.V1.ListSalesOrderRequest.Types.DateRangeFilter RequestedActivation {
          get { return requestedActivation_; }
          set {
            requestedActivation_ = value;
          }
        }

        /// <summary>Field number for the "statuses" field.</summary>
        public const int StatusesFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Salesorders.V1.Status> _repeated_statuses_codec
            = pb::FieldCodec.ForEnum(42, x => (int) x, x => (global::Salesorders.V1.Status) x);
        private readonly pbc::RepeatedField<global::Salesorders.V1.Status> statuses_ = new pbc::RepeatedField<global::Salesorders.V1.Status>();
        /// <summary>
        /// Multiple status filter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Salesorders.V1.Status> Statuses {
          get { return statuses_; }
        }

        /// <summary>Field number for the "business_id" field.</summary>
        public const int BusinessIdFieldNumber = 6;
        private string businessId_ = "";
        /// <summary>
        /// Singular business filter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BusinessId {
          get { return businessId_; }
          set {
            businessId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Filters);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Filters other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MarketId != other.MarketId) return false;
          if (SalespersonId != other.SalespersonId) return false;
          if (!object.Equals(Created, other.Created)) return false;
          if (!object.Equals(RequestedActivation, other.RequestedActivation)) return false;
          if(!statuses_.Equals(other.statuses_)) return false;
          if (BusinessId != other.BusinessId) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
          if (SalespersonId.Length != 0) hash ^= SalespersonId.GetHashCode();
          if (created_ != null) hash ^= Created.GetHashCode();
          if (requestedActivation_ != null) hash ^= RequestedActivation.GetHashCode();
          hash ^= statuses_.GetHashCode();
          if (BusinessId.Length != 0) hash ^= BusinessId.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (MarketId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MarketId);
          }
          if (SalespersonId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(SalespersonId);
          }
          if (created_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Created);
          }
          if (requestedActivation_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(RequestedActivation);
          }
          statuses_.WriteTo(output, _repeated_statuses_codec);
          if (BusinessId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(BusinessId);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MarketId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
          }
          if (SalespersonId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SalespersonId);
          }
          if (created_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
          }
          if (requestedActivation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestedActivation);
          }
          size += statuses_.CalculateSize(_repeated_statuses_codec);
          if (BusinessId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessId);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Filters other) {
          if (other == null) {
            return;
          }
          if (other.MarketId.Length != 0) {
            MarketId = other.MarketId;
          }
          if (other.SalespersonId.Length != 0) {
            SalespersonId = other.SalespersonId;
          }
          if (other.created_ != null) {
            if (created_ == null) {
              created_ = new global::Salesorders.V1.ListSalesOrderRequest.Types.DateRangeFilter();
            }
            Created.MergeFrom(other.Created);
          }
          if (other.requestedActivation_ != null) {
            if (requestedActivation_ == null) {
              requestedActivation_ = new global::Salesorders.V1.ListSalesOrderRequest.Types.DateRangeFilter();
            }
            RequestedActivation.MergeFrom(other.RequestedActivation);
          }
          statuses_.Add(other.statuses_);
          if (other.BusinessId.Length != 0) {
            BusinessId = other.BusinessId;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                MarketId = input.ReadString();
                break;
              }
              case 18: {
                SalespersonId = input.ReadString();
                break;
              }
              case 26: {
                if (created_ == null) {
                  created_ = new global::Salesorders.V1.ListSalesOrderRequest.Types.DateRangeFilter();
                }
                input.ReadMessage(created_);
                break;
              }
              case 34: {
                if (requestedActivation_ == null) {
                  requestedActivation_ = new global::Salesorders.V1.ListSalesOrderRequest.Types.DateRangeFilter();
                }
                input.ReadMessage(requestedActivation_);
                break;
              }
              case 42:
              case 40: {
                statuses_.AddEntriesFrom(input, _repeated_statuses_codec);
                break;
              }
              case 50: {
                BusinessId = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Options for controlling the order of query results
      /// </summary>
      public sealed partial class SortOption : pb::IMessage<SortOption> {
        private static readonly pb::MessageParser<SortOption> _parser = new pb::MessageParser<SortOption>(() => new SortOption());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SortOption> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Salesorders.V1.ListSalesOrderRequest.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SortOption() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SortOption(SortOption other) : this() {
          direction_ = other.direction_;
          field_ = other.field_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SortOption Clone() {
          return new SortOption(this);
        }

        /// <summary>Field number for the "direction" field.</summary>
        public const int DirectionFieldNumber = 1;
        private global::Salesorders.V1.ListSalesOrderRequest.Types.SortDirection direction_ = 0;
        /// <summary>
        /// A direction to sort results in
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Salesorders.V1.ListSalesOrderRequest.Types.SortDirection Direction {
          get { return direction_; }
          set {
            direction_ = value;
          }
        }

        /// <summary>Field number for the "field" field.</summary>
        public const int FieldFieldNumber = 2;
        private global::Salesorders.V1.ListSalesOrderRequest.Types.SortField field_ = 0;
        /// <summary>
        /// Field to sort on
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Salesorders.V1.ListSalesOrderRequest.Types.SortField Field {
          get { return field_; }
          set {
            field_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SortOption);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SortOption other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Direction != other.Direction) return false;
          if (Field != other.Field) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Direction != 0) hash ^= Direction.GetHashCode();
          if (Field != 0) hash ^= Field.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Direction != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Direction);
          }
          if (Field != 0) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Field);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Direction != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
          }
          if (Field != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Field);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SortOption other) {
          if (other == null) {
            return;
          }
          if (other.Direction != 0) {
            Direction = other.Direction;
          }
          if (other.Field != 0) {
            Field = other.Field;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                direction_ = (global::Salesorders.V1.ListSalesOrderRequest.Types.SortDirection) input.ReadEnum();
                break;
              }
              case 16: {
                field_ = (global::Salesorders.V1.ListSalesOrderRequest.Types.SortField) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Response to get a list of orders for a partner
  /// </summary>
  public sealed partial class ListSalesOrderResponse : pb::IMessage<ListSalesOrderResponse> {
    private static readonly pb::MessageParser<ListSalesOrderResponse> _parser = new pb::MessageParser<ListSalesOrderResponse>(() => new ListSalesOrderResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListSalesOrderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.ApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSalesOrderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSalesOrderResponse(ListSalesOrderResponse other) : this() {
      orders_ = other.orders_.Clone();
      nextCursor_ = other.nextCursor_;
      hasMore_ = other.hasMore_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSalesOrderResponse Clone() {
      return new ListSalesOrderResponse(this);
    }

    /// <summary>Field number for the "orders" field.</summary>
    public const int OrdersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Salesorders.V1.Order> _repeated_orders_codec
        = pb::FieldCodec.ForMessage(10, global::Salesorders.V1.Order.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.Order> orders_ = new pbc::RepeatedField<global::Salesorders.V1.Order>();
    /// <summary>
    /// list of the requested sales order data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.Order> Orders {
      get { return orders_; }
    }

    /// <summary>Field number for the "next_cursor" field.</summary>
    public const int NextCursorFieldNumber = 2;
    private string nextCursor_ = "";
    /// <summary>
    /// A cursor that can be provided to retrieve the next page of results
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextCursor {
      get { return nextCursor_; }
      set {
        nextCursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "has_more" field.</summary>
    public const int HasMoreFieldNumber = 3;
    private bool hasMore_;
    /// <summary>
    /// Whether or not more results exist
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMore {
      get { return hasMore_; }
      set {
        hasMore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListSalesOrderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListSalesOrderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!orders_.Equals(other.orders_)) return false;
      if (NextCursor != other.NextCursor) return false;
      if (HasMore != other.HasMore) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= orders_.GetHashCode();
      if (NextCursor.Length != 0) hash ^= NextCursor.GetHashCode();
      if (HasMore != false) hash ^= HasMore.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      orders_.WriteTo(output, _repeated_orders_codec);
      if (NextCursor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextCursor);
      }
      if (HasMore != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasMore);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orders_.CalculateSize(_repeated_orders_codec);
      if (NextCursor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextCursor);
      }
      if (HasMore != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListSalesOrderResponse other) {
      if (other == null) {
        return;
      }
      orders_.Add(other.orders_);
      if (other.NextCursor.Length != 0) {
        NextCursor = other.NextCursor;
      }
      if (other.HasMore != false) {
        HasMore = other.HasMore;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            orders_.AddEntriesFrom(input, _repeated_orders_codec);
            break;
          }
          case 18: {
            NextCursor = input.ReadString();
            break;
          }
          case 24: {
            HasMore = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request for approving a order
  /// </summary>
  public sealed partial class ApproveSalesOrderRequest : pb::IMessage<ApproveSalesOrderRequest> {
    private static readonly pb::MessageParser<ApproveSalesOrderRequest> _parser = new pb::MessageParser<ApproveSalesOrderRequest>(() => new ApproveSalesOrderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApproveSalesOrderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.ApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApproveSalesOrderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApproveSalesOrderRequest(ApproveSalesOrderRequest other) : this() {
      orderId_ = other.orderId_;
      businessId_ = other.businessId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApproveSalesOrderRequest Clone() {
      return new ApproveSalesOrderRequest(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private string orderId_ = "";
    /// <summary>
    /// Unique identifier of an order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_id" field.</summary>
    public const int BusinessIdFieldNumber = 2;
    private string businessId_ = "";
    /// <summary>
    /// The business the order belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessId {
      get { return businessId_; }
      set {
        businessId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApproveSalesOrderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApproveSalesOrderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (BusinessId != other.BusinessId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (BusinessId.Length != 0) hash ^= BusinessId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
      if (BusinessId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BusinessId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (BusinessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApproveSalesOrderRequest other) {
      if (other == null) {
        return;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      if (other.BusinessId.Length != 0) {
        BusinessId = other.BusinessId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
          case 18: {
            BusinessId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response of approving an order
  /// </summary>
  public sealed partial class ApproveSalesOrderResponse : pb::IMessage<ApproveSalesOrderResponse> {
    private static readonly pb::MessageParser<ApproveSalesOrderResponse> _parser = new pb::MessageParser<ApproveSalesOrderResponse>(() => new ApproveSalesOrderResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApproveSalesOrderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.ApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApproveSalesOrderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApproveSalesOrderResponse(ApproveSalesOrderResponse other) : this() {
      Order = other.order_ != null ? other.Order.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApproveSalesOrderResponse Clone() {
      return new ApproveSalesOrderResponse(this);
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 1;
    private global::Salesorders.V1.Order order_;
    /// <summary>
    /// Sales order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.Order Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApproveSalesOrderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApproveSalesOrderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Order, other.Order)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (order_ != null) hash ^= Order.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (order_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Order);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (order_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Order);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApproveSalesOrderResponse other) {
      if (other == null) {
        return;
      }
      if (other.order_ != null) {
        if (order_ == null) {
          order_ = new global::Salesorders.V1.Order();
        }
        Order.MergeFrom(other.Order);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (order_ == null) {
              order_ = new global::Salesorders.V1.Order();
            }
            input.ReadMessage(order_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request for declining a order
  /// </summary>
  public sealed partial class DeclineSalesOrderRequest : pb::IMessage<DeclineSalesOrderRequest> {
    private static readonly pb::MessageParser<DeclineSalesOrderRequest> _parser = new pb::MessageParser<DeclineSalesOrderRequest>(() => new DeclineSalesOrderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeclineSalesOrderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.ApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineSalesOrderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineSalesOrderRequest(DeclineSalesOrderRequest other) : this() {
      orderId_ = other.orderId_;
      businessId_ = other.businessId_;
      declinedReason_ = other.declinedReason_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineSalesOrderRequest Clone() {
      return new DeclineSalesOrderRequest(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private string orderId_ = "";
    /// <summary>
    /// Unique identifier of an order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_id" field.</summary>
    public const int BusinessIdFieldNumber = 2;
    private string businessId_ = "";
    /// <summary>
    /// The business the order belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessId {
      get { return businessId_; }
      set {
        businessId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "declined_reason" field.</summary>
    public const int DeclinedReasonFieldNumber = 3;
    private string declinedReason_ = "";
    /// <summary>
    /// Reason to why the order is declined
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeclinedReason {
      get { return declinedReason_; }
      set {
        declinedReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeclineSalesOrderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeclineSalesOrderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (BusinessId != other.BusinessId) return false;
      if (DeclinedReason != other.DeclinedReason) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (BusinessId.Length != 0) hash ^= BusinessId.GetHashCode();
      if (DeclinedReason.Length != 0) hash ^= DeclinedReason.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
      if (BusinessId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BusinessId);
      }
      if (DeclinedReason.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeclinedReason);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (BusinessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessId);
      }
      if (DeclinedReason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeclinedReason);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeclineSalesOrderRequest other) {
      if (other == null) {
        return;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      if (other.BusinessId.Length != 0) {
        BusinessId = other.BusinessId;
      }
      if (other.DeclinedReason.Length != 0) {
        DeclinedReason = other.DeclinedReason;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
          case 18: {
            BusinessId = input.ReadString();
            break;
          }
          case 26: {
            DeclinedReason = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response of declining an order
  /// </summary>
  public sealed partial class DeclineSalesOrderResponse : pb::IMessage<DeclineSalesOrderResponse> {
    private static readonly pb::MessageParser<DeclineSalesOrderResponse> _parser = new pb::MessageParser<DeclineSalesOrderResponse>(() => new DeclineSalesOrderResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeclineSalesOrderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.ApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineSalesOrderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineSalesOrderResponse(DeclineSalesOrderResponse other) : this() {
      Order = other.order_ != null ? other.Order.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineSalesOrderResponse Clone() {
      return new DeclineSalesOrderResponse(this);
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 1;
    private global::Salesorders.V1.Order order_;
    /// <summary>
    /// Sales order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.Order Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeclineSalesOrderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeclineSalesOrderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Order, other.Order)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (order_ != null) hash ^= Order.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (order_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Order);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (order_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Order);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeclineSalesOrderResponse other) {
      if (other == null) {
        return;
      }
      if (other.order_ != null) {
        if (order_ == null) {
          order_ = new global::Salesorders.V1.Order();
        }
        Order.MergeFrom(other.Order);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (order_ == null) {
              order_ = new global::Salesorders.V1.Order();
            }
            input.ReadMessage(order_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request for activating products on the order
  /// </summary>
  public sealed partial class ActivateProductsRequest : pb::IMessage<ActivateProductsRequest> {
    private static readonly pb::MessageParser<ActivateProductsRequest> _parser = new pb::MessageParser<ActivateProductsRequest>(() => new ActivateProductsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivateProductsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.ApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateProductsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateProductsRequest(ActivateProductsRequest other) : this() {
      orderId_ = other.orderId_;
      businessId_ = other.businessId_;
      customFields_ = other.customFields_.Clone();
      commonFields_ = other.commonFields_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateProductsRequest Clone() {
      return new ActivateProductsRequest(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private string orderId_ = "";
    /// <summary>
    /// Unique identifier of an order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_id" field.</summary>
    public const int BusinessIdFieldNumber = 2;
    private string businessId_ = "";
    /// <summary>
    /// The business the order belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessId {
      get { return businessId_; }
      set {
        businessId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "custom_fields" field.</summary>
    public const int CustomFieldsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Salesorders.V1.CustomField> _repeated_customFields_codec
        = pb::FieldCodec.ForMessage(26, global::Salesorders.V1.CustomField.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.CustomField> customFields_ = new pbc::RepeatedField<global::Salesorders.V1.CustomField>();
    /// <summary>
    /// A list of additional unique information pertaining to an individual product
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.CustomField> CustomFields {
      get { return customFields_; }
    }

    /// <summary>Field number for the "common_fields" field.</summary>
    public const int CommonFieldsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Salesorders.V1.CommonField> _repeated_commonFields_codec
        = pb::FieldCodec.ForMessage(34, global::Salesorders.V1.CommonField.Parser);
    private readonly pbc::RepeatedField<global::Salesorders.V1.CommonField> commonFields_ = new pbc::RepeatedField<global::Salesorders.V1.CommonField>();
    /// <summary>
    /// A list of additional information that is shared across multiple products
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Salesorders.V1.CommonField> CommonFields {
      get { return commonFields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivateProductsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivateProductsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (BusinessId != other.BusinessId) return false;
      if(!customFields_.Equals(other.customFields_)) return false;
      if(!commonFields_.Equals(other.commonFields_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (BusinessId.Length != 0) hash ^= BusinessId.GetHashCode();
      hash ^= customFields_.GetHashCode();
      hash ^= commonFields_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
      if (BusinessId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BusinessId);
      }
      customFields_.WriteTo(output, _repeated_customFields_codec);
      commonFields_.WriteTo(output, _repeated_commonFields_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (BusinessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessId);
      }
      size += customFields_.CalculateSize(_repeated_customFields_codec);
      size += commonFields_.CalculateSize(_repeated_commonFields_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivateProductsRequest other) {
      if (other == null) {
        return;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      if (other.BusinessId.Length != 0) {
        BusinessId = other.BusinessId;
      }
      customFields_.Add(other.customFields_);
      commonFields_.Add(other.commonFields_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
          case 18: {
            BusinessId = input.ReadString();
            break;
          }
          case 26: {
            customFields_.AddEntriesFrom(input, _repeated_customFields_codec);
            break;
          }
          case 34: {
            commonFields_.AddEntriesFrom(input, _repeated_commonFields_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response of activating products on the order
  /// </summary>
  public sealed partial class ActivateProductsResponse : pb::IMessage<ActivateProductsResponse> {
    private static readonly pb::MessageParser<ActivateProductsResponse> _parser = new pb::MessageParser<ActivateProductsResponse>(() => new ActivateProductsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivateProductsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Salesorders.V1.ApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateProductsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateProductsResponse(ActivateProductsResponse other) : this() {
      Order = other.order_ != null ? other.Order.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateProductsResponse Clone() {
      return new ActivateProductsResponse(this);
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 1;
    private global::Salesorders.V1.Order order_;
    /// <summary>
    /// Sales order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Salesorders.V1.Order Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivateProductsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivateProductsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Order, other.Order)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (order_ != null) hash ^= Order.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (order_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Order);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (order_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Order);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivateProductsResponse other) {
      if (other == null) {
        return;
      }
      if (other.order_ != null) {
        if (order_ == null) {
          order_ = new global::Salesorders.V1.Order();
        }
        Order.MergeFrom(other.Order);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (order_ == null) {
              order_ = new global::Salesorders.V1.Order();
            }
            input.ReadMessage(order_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
